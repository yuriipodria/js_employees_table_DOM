{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAG/B,EAAU,EAAM,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CACrC,EAAoB,GACpB,EAAwB,GACxB,EAAsB,GACtB,EAAmB,GACnB,EAAsB,GAE1B,SAAS,EAAW,CAAI,CAAE,CAAI,EAC5B,IAAM,EAAe,EAAK,KAAK,CAAC,EAAE,CAAC,WAAW,CACxC,EAAgB,EAAK,KAAK,CAAC,EAAE,CAAC,WAAW,CAE/C,OAAO,EAAa,aAAa,CAAC,GAAiB,CACrD,CAEA,SAAS,EAAe,CAAI,CAAE,CAAI,EAChC,IAAM,EAAmB,EAAK,KAAK,CAAC,EAAE,CAAC,WAAW,CAC5C,EAAoB,EAAK,KAAK,CAAC,EAAE,CAAC,WAAW,CAEnD,OACE,EAAiB,aAAa,CAAC,GAAqB,CAExD,CAEA,SAAS,EAAa,CAAI,CAAE,CAAI,EAC9B,IAAM,EAAiB,EAAK,KAAK,CAAC,EAAE,CAAC,WAAW,CAC1C,EAAkB,EAAK,KAAK,CAAC,EAAE,CAAC,WAAW,CAEjD,OAAO,EAAe,aAAa,CAAC,GAAmB,CACzD,CAEA,SAAS,EAAU,CAAI,CAAE,CAAI,EAI3B,MAAO,AAAC,CAAA,AAHY,CAAC,EAAK,KAAK,CAAC,EAAE,CAAC,WAAW,CACzB,CAAC,EAAK,KAAK,CAAC,EAAE,CAAC,WAAW,AAEzB,EAAgB,CACxC,CAEA,SAAS,EAAa,CAAI,CAAE,CAAI,EAI9B,MAAO,AAAC,CAAA,AAHe,CAAC,EAAK,KAAK,CAAC,EAAE,CAAC,WAAW,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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\n// #region sorting\nvar headers = table.tHead.rows[0].cells;\nvar sortDirectionName = -1;\nvar sortDirectionPosition = -1;\nvar sortDirectionOffice = -1;\nvar sortDirectionAge = -1;\nvar sortDirectionSalary = -1;\nfunction sortByName(row1, row2) {\n    var firstRowName = row1.cells[0].textContent;\n    var secondRowName = row2.cells[0].textContent;\n    return firstRowName.localeCompare(secondRowName) * sortDirectionName;\n}\nfunction sortByPosition(row1, row2) {\n    var firstRowPosition = row1.cells[1].textContent;\n    var secondRowPosition = row2.cells[1].textContent;\n    return firstRowPosition.localeCompare(secondRowPosition) * sortDirectionPosition;\n}\nfunction sortByOffice(row1, row2) {\n    var firstRowOffice = row1.cells[2].textContent;\n    var secondRowOffice = row2.cells[2].textContent;\n    return firstRowOffice.localeCompare(secondRowOffice) * sortDirectionOffice;\n}\nfunction sortByAge(row1, row2) {\n    var firstRowAge = +row1.cells[3].textContent;\n    var secondRowAge = +row2.cells[3].textContent;\n    return (firstRowAge - secondRowAge) * sortDirectionAge;\n}\nfunction sortBySalary(row1, row2) {\n    var firstRowSalary = +row1.cells[4].textContent.replace(/\\D/g, \"\");\n    var secondRowSalary = +row2.cells[4].textContent.replace(/\\D/g, \"\");\n    return (firstRowSalary - secondRowSalary) * sortDirectionSalary;\n}\nfunction handleSort(e) {\n    var tableBody = table.tBodies[0];\n    var rows = _to_consumable_array(tableBody.rows);\n    var newTableBody = document.createElement(\"tbody\");\n    var sortedRows = [];\n    switch(e.target.textContent){\n        case \"Name\":\n            sortDirectionName *= -1;\n            sortDirectionPosition = sortDirectionOffice = sortDirectionAge = sortDirectionSalary = -1;\n            sortedRows = rows.sort(sortByName);\n            break;\n        case \"Position\":\n            sortDirectionPosition *= -1;\n            sortDirectionName = sortDirectionOffice = sortDirectionAge = sortDirectionSalary = -1;\n            sortedRows = rows.sort(sortByPosition);\n            break;\n        case \"Office\":\n            sortDirectionOffice *= -1;\n            sortDirectionName = sortDirectionPosition = sortDirectionAge = sortDirectionSalary = -1;\n            sortedRows = rows.sort(sortByOffice);\n            break;\n        case \"Age\":\n            sortDirectionAge *= -1;\n            sortDirectionName = sortDirectionPosition = sortDirectionOffice = sortDirectionSalary = -1;\n            sortedRows = rows.sort(sortByAge);\n            break;\n        case \"Salary\":\n            sortDirectionSalary *= -1;\n            sortDirectionName = sortDirectionPosition = sortDirectionOffice = sortDirectionAge = -1;\n            sortedRows = rows.sort(sortBySalary);\n            break;\n    }\n    sortedRows.forEach(function(row) {\n        return newTableBody.appendChild(row);\n    });\n    table.replaceChild(newTableBody, tableBody);\n}\n_to_consumable_array(headers).forEach(function(header) {\n    header.addEventListener(\"click\", handleSort);\n});\n// #endregion\n// #region row selection\nfunction handleRowSelection(e) {\n    _to_consumable_array(table.tBodies[0].rows).forEach(function(row) {\n        row.classList.remove(\"active\");\n    });\n    e.currentTarget.classList.add(\"active\");\n}\n_to_consumable_array(table.tBodies[0].rows).forEach(function(row) {\n    row.addEventListener(\"click\", handleRowSelection);\n});\n// #endregion\n// #region form\nvar form = document.createElement(\"form\");\nform.className = \"new-employee-form\";\nform.innerHTML = '\\n  <label for=\"name\">Name: <input name=\"name\" id=\"name\" type=\"text\" data-qa=\"name\"></label>\\n\\n  <label for=\"position\">Position: <input name=\"position\" id=\"position\" type=\"text\" data-qa=\"position\"></label>\\n\\n  <label for=\"office\">\\n    Office:\\n\\n    <select name=\"office\" id=\"office\" data-qa=\"office\">\\n      <option value=\"Tokyo\">Tokyo</option>\\n      <option value=\"Singapore\">Singapore</option>\\n      <option value=\"London\">London</option>\\n      <option value=\"New York\">New York</option>\\n      <option value=\"Edinburgh\">Edinburgh</option>\\n      <option value=\"San Francisco\">San Francisco</option>\\n    </select>\\n  </label>\\n\\n  <label for=\"age\">Age: <input name=\"age\" id=\"age\" type=\"number\" data-qa=\"age\"></label>\\n\\n  <label for=\"salary\">Salary: <input name=\"salary\" id=\"salary\" type=\"number\" data-qa=\"salary\"></label>\\n\\n  <button type=\"submit\">Save to table</button>\\n';\ndocument.body.appendChild(form);\n// #endregion\n// #region submission\nvar pushNotification = function(posTop, posRight, title, description, type) {\n    var notification = document.createElement(\"div\");\n    notification.classList.add(\"notification\", type);\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.style.top = \"\".concat(posTop, \"px\");\n    notification.style.right = \"\".concat(posRight, \"px\");\n    notification.innerHTML = '\\n    <h2 class=\"title\">'.concat(title, \"</h2>\\n    <p>\").concat(description, \"</p>\\n  \");\n    document.body.appendChild(notification);\n    setTimeout(function() {\n        return document.body.removeChild(notification);\n    }, 2000);\n};\nfunction handleSubmit(e) {\n    e.preventDefault();\n    var data = new FormData(e.currentTarget);\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = data.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var value = _step.value;\n            if (!value) {\n                pushNotification(10, 10, \"Error\", \"All fields are required\", \"error\");\n                return;\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    if (data.get(\"name\").length < 4) {\n        pushNotification(10, 10, \"Error\", \"Name should contain more than 4 letters\", \"error\");\n        return;\n    }\n    if (data.get(\"age\") < 18) {\n        pushNotification(10, 10, \"Error\", \"The employee must be over 18\", \"error\");\n        return;\n    }\n    if (data.get(\"age\") > 90) {\n        pushNotification(10, 10, \"Error\", \"The employee must be under 90\", \"error\");\n        return;\n    }\n    var newRow = document.createElement(\"tr\");\n    newRow.innerHTML = \"\\n    <td>\".concat(data.get(\"name\"), \"</td>\\n    <td>\").concat(data.get(\"position\"), \"</td>\\n    <td>\").concat(data.get(\"office\"), \"</td>\\n    <td>\").concat(data.get(\"age\"), \"</td>\\n    <td>\").concat(\"$\" + Number(data.get(\"salary\")).toLocaleString(\"en-US\"), \"</td>\\n  \");\n    pushNotification(10, 10, \"Success\", \"New employee successfully added\", \"success\");\n    _to_consumable_array(newRow.cells).forEach(function(cell) {\n        cell.addEventListener(\"dblclick\", handleEdit);\n    });\n    table.tBodies[0].appendChild(newRow);\n}\nform.addEventListener(\"submit\", handleSubmit);\n// #endregion\n// #region editing cells\nfunction handleEdit(e) {\n    var cell = e.target;\n    var initialText = cell.textContent;\n    var input = document.createElement(\"input\");\n    input.type = \"text\";\n    input.className = \"cell-input\";\n    function handleEnteredText(TextEnterEvent) {\n        var enteredText = TextEnterEvent.target.value;\n        if (enteredText) cell.textContent = enteredText;\n        else cell.textContent = initialText;\n        cell.removeChild(input);\n    }\n    input.addEventListener(\"blur\", handleEnteredText);\n    input.addEventListener(\"keypress\", function(EnterKeyEvent) {\n        if (EnterKeyEvent.key === \"Enter\") handleEnteredText(EnterKeyEvent);\n    });\n    cell.textContent = \"\";\n    cell.appendChild(input);\n    input.focus();\n}\n_to_consumable_array(document.querySelectorAll(\"td\")).forEach(function(cell) {\n    cell.addEventListener(\"dblclick\", handleEdit);\n}); // #endregion\n\n//# sourceMappingURL=index.34f939f3.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\n\n// #region sorting\nconst headers = table.tHead.rows[0].cells;\nlet sortDirectionName = -1;\nlet sortDirectionPosition = -1;\nlet sortDirectionOffice = -1;\nlet sortDirectionAge = -1;\nlet sortDirectionSalary = -1;\n\nfunction sortByName(row1, row2) {\n  const firstRowName = row1.cells[0].textContent;\n  const secondRowName = row2.cells[0].textContent;\n\n  return firstRowName.localeCompare(secondRowName) * sortDirectionName;\n}\n\nfunction sortByPosition(row1, row2) {\n  const firstRowPosition = row1.cells[1].textContent;\n  const secondRowPosition = row2.cells[1].textContent;\n\n  return (\n    firstRowPosition.localeCompare(secondRowPosition) * sortDirectionPosition\n  );\n}\n\nfunction sortByOffice(row1, row2) {\n  const firstRowOffice = row1.cells[2].textContent;\n  const secondRowOffice = row2.cells[2].textContent;\n\n  return firstRowOffice.localeCompare(secondRowOffice) * sortDirectionOffice;\n}\n\nfunction sortByAge(row1, row2) {\n  const firstRowAge = +row1.cells[3].textContent;\n  const secondRowAge = +row2.cells[3].textContent;\n\n  return (firstRowAge - secondRowAge) * sortDirectionAge;\n}\n\nfunction sortBySalary(row1, row2) {\n  const firstRowSalary = +row1.cells[4].textContent.replace(/\\D/g, '');\n  const secondRowSalary = +row2.cells[4].textContent.replace(/\\D/g, '');\n\n  return (firstRowSalary - secondRowSalary) * sortDirectionSalary;\n}\n\nfunction handleSort(e) {\n  const tableBody = table.tBodies[0];\n  const rows = [...tableBody.rows];\n  const newTableBody = document.createElement('tbody');\n  let sortedRows = [];\n\n  switch (e.target.textContent) {\n    case 'Name':\n      sortDirectionName *= -1;\n\n      sortDirectionPosition =\n        sortDirectionOffice =\n        sortDirectionAge =\n        sortDirectionSalary =\n          -1;\n\n      sortedRows = rows.sort(sortByName);\n      break;\n\n    case 'Position':\n      sortDirectionPosition *= -1;\n\n      sortDirectionName =\n        sortDirectionOffice =\n        sortDirectionAge =\n        sortDirectionSalary =\n          -1;\n\n      sortedRows = rows.sort(sortByPosition);\n      break;\n\n    case 'Office':\n      sortDirectionOffice *= -1;\n\n      sortDirectionName =\n        sortDirectionPosition =\n        sortDirectionAge =\n        sortDirectionSalary =\n          -1;\n\n      sortedRows = rows.sort(sortByOffice);\n      break;\n\n    case 'Age':\n      sortDirectionAge *= -1;\n\n      sortDirectionName =\n        sortDirectionPosition =\n        sortDirectionOffice =\n        sortDirectionSalary =\n          -1;\n\n      sortedRows = rows.sort(sortByAge);\n      break;\n\n    case 'Salary':\n      sortDirectionSalary *= -1;\n\n      sortDirectionName =\n        sortDirectionPosition =\n        sortDirectionOffice =\n        sortDirectionAge =\n          -1;\n\n      sortedRows = rows.sort(sortBySalary);\n      break;\n  }\n\n  sortedRows.forEach((row) => newTableBody.appendChild(row));\n  table.replaceChild(newTableBody, tableBody);\n}\n\n[...headers].forEach((header) => {\n  header.addEventListener('click', handleSort);\n});\n// #endregion\n\n// #region row selection\nfunction handleRowSelection(e) {\n  [...table.tBodies[0].rows].forEach((row) => {\n    row.classList.remove('active');\n  });\n\n  e.currentTarget.classList.add('active');\n}\n\n[...table.tBodies[0].rows].forEach((row) => {\n  row.addEventListener('click', handleRowSelection);\n});\n// #endregion\n\n// #region form\nconst form = document.createElement('form');\n\nform.className = 'new-employee-form';\n\nform.innerHTML = `\n  <label for=\"name\">Name: <input name=\"name\" id=\"name\" type=\"text\" data-qa=\"name\"></label>\n\n  <label for=\"position\">Position: <input name=\"position\" id=\"position\" type=\"text\" data-qa=\"position\"></label>\n\n  <label for=\"office\">\n    Office:\n\n    <select name=\"office\" id=\"office\" data-qa=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n\n  <label for=\"age\">Age: <input name=\"age\" id=\"age\" type=\"number\" data-qa=\"age\"></label>\n\n  <label for=\"salary\">Salary: <input name=\"salary\" id=\"salary\" type=\"number\" data-qa=\"salary\"></label>\n\n  <button type=\"submit\">Save to table</button>\n`;\n\ndocument.body.appendChild(form);\n// #endregion\n\n// #region submission\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', type);\n  notification.setAttribute('data-qa', 'notification');\n  notification.style.top = `${posTop}px`;\n  notification.style.right = `${posRight}px`;\n\n  notification.innerHTML = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n  `;\n\n  document.body.appendChild(notification);\n\n  setTimeout(() => document.body.removeChild(notification), 2000);\n};\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  const data = new FormData(e.currentTarget);\n\n  for (const value of data.values()) {\n    if (!value) {\n      pushNotification(10, 10, 'Error', 'All fields are required', 'error');\n\n      return;\n    }\n  }\n\n  if (data.get('name').length < 4) {\n    pushNotification(\n      10,\n      10,\n      'Error',\n      'Name should contain more than 4 letters',\n      'error',\n    );\n\n    return;\n  }\n\n  if (data.get('age') < 18) {\n    pushNotification(10, 10, 'Error', 'The employee must be over 18', 'error');\n\n    return;\n  }\n\n  if (data.get('age') > 90) {\n    pushNotification(10, 10, 'Error', 'The employee must be under 90', 'error');\n\n    return;\n  }\n\n  const newRow = document.createElement('tr');\n\n  newRow.innerHTML = `\n    <td>${data.get('name')}</td>\n    <td>${data.get('position')}</td>\n    <td>${data.get('office')}</td>\n    <td>${data.get('age')}</td>\n    <td>${'$' + Number(data.get('salary')).toLocaleString('en-US')}</td>\n  `;\n\n  pushNotification(\n    10,\n    10,\n    'Success',\n    'New employee successfully added',\n    'success',\n  );\n\n  [...newRow.cells].forEach((cell) => {\n    cell.addEventListener('dblclick', handleEdit);\n  });\n  table.tBodies[0].appendChild(newRow);\n}\n\nform.addEventListener('submit', handleSubmit);\n// #endregion\n\n// #region editing cells\nfunction handleEdit(e) {\n  const cell = e.target;\n  const initialText = cell.textContent;\n  const input = document.createElement('input');\n\n  input.type = 'text';\n  input.className = 'cell-input';\n\n  function handleEnteredText(TextEnterEvent) {\n    const enteredText = TextEnterEvent.target.value;\n\n    if (enteredText) {\n      cell.textContent = enteredText;\n    } else {\n      cell.textContent = initialText;\n    }\n\n    cell.removeChild(input);\n  }\n\n  input.addEventListener('blur', handleEnteredText);\n\n  input.addEventListener('keypress', (EnterKeyEvent) => {\n    if (EnterKeyEvent.key === 'Enter') {\n      handleEnteredText(EnterKeyEvent);\n    }\n  });\n\n  cell.textContent = '';\n  cell.appendChild(input);\n  input.focus();\n}\n\n[...document.querySelectorAll('td')].forEach((cell) => {\n  cell.addEventListener('dblclick', handleEdit);\n});\n// #endregion\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","table","document","querySelector","headers","tHead","rows","cells","sortDirectionName","sortDirectionPosition","sortDirectionOffice","sortDirectionAge","sortDirectionSalary","sortByName","row1","row2","firstRowName","textContent","secondRowName","localeCompare","sortByPosition","firstRowPosition","secondRowPosition","sortByOffice","firstRowOffice","secondRowOffice","sortByAge","firstRowAge","sortBySalary","firstRowSalary","replace","handleSort","e","tableBody","tBodies","newTableBody","createElement","sortedRows","target","sort","forEach","row","appendChild","replaceChild","handleRowSelection","classList","remove","currentTarget","add","header","addEventListener","form","className","innerHTML","body","pushNotification","posTop","posRight","title","description","type","notification","setAttribute","style","top","concat","right","setTimeout","removeChild","handleEdit","cell","initialText","input","handleEnteredText","TextEnterEvent","enteredText","value","EnterKeyEvent","key","focus","preventDefault","data","FormData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","next","done","err","return","get","newRow","Number","toLocaleString","querySelectorAll"],"version":3,"file":"index.34f939f3.js.map"}